{"version":3,"sources":["components/Input.jsx","helpers/weatherFunctions.js","constants.js","components/MainWeather.jsx","components/WeatherChart.jsx","components/BarWeather.jsx","components/SpecificData.jsx","components/Error.jsx","components/Loader.jsx","hooks/useDebounce.js","actiontypes/index.js","App.jsx","actions/WeatherActions.js","reducers/weather.js","index.js"],"names":["Input","inputValue","inputHandler","inputRef","useRef","useEffect","current","focus","type","className","placeholder","value","onChange","e","ref","setIconUrl","icon","setTime","time","Date","toLocaleTimeString","slice","MainWeather","data","city","name","sunrise","sunset","tempDay","list","main","temp","tempNight","weather","Math","round","src","alt","temperatureColor","windChillColor","WeatherChart","futureData","labels","map","item","dt_txt","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","feels_like","options","scales","yAxes","scaleLabel","display","labelString","fontSize","xAxes","BarWeather","filter","i","dt","toLocaleString","weekday","SpecificData","loading","degree","pressure","humidity","wind","speed","deg","Error","Loader","useDebounce","useState","typingTimeout","setTypingTimeout","func","delay","clearTimeout","timeout","setTimeout","FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","SET_ERROR","App","setInputValue","debounce","dispatch","useDispatch","useSelector","state","error","payload","setError","a","url","process","axios","get","response","fetchData","target","INITIAL_STATE","weatherReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7999cc64.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nconst Input = ({ inputValue, inputHandler }) => {\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"search-input\"\r\n      placeholder=\"Where do you live?\"\r\n      value={inputValue}\r\n      onChange={(e) => inputHandler(e)}\r\n      ref={inputRef}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import { BASE_URL_IMG } from '../constants'\r\n\r\nexport const setIconUrl = (icon) => `${BASE_URL_IMG}/${icon}@2x.png`\r\n\r\nexport const setTime = (time) => {\r\n  return new Date(time * 1000).toLocaleTimeString().slice(0, 5)\r\n}\r\n\r\nexport const setWeekDayNameShort = (time) => {\r\n  return new Date(time * 1000).toLocaleString('en-US', { weekday: 'short' })\r\n}\r\n\r\nexport const toTextualDescription = (degree) => {\r\n  if (degree > 337.5) return 'Northerly'\r\n  if (degree > 292.5) return 'North Westerly'\r\n  if (degree > 247.5) return 'Westerly'\r\n  if (degree > 202.5) return 'South Westerly'\r\n  if (degree > 157.5) return 'Southerly'\r\n  if (degree > 122.5) return 'South Easterly'\r\n  if (degree > 67.5) return 'Easterly'\r\n  if (degree > 22.5) {\r\n    return 'North Easterly'\r\n  }\r\n  return 'Northerly'\r\n}\r\n","export const BASE_URL = 'http://api.openweathermap.org'\r\nexport const BASE_URL_IMG = 'http://openweathermap.org/img/wn'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FiSunrise, FiSunset } from 'react-icons/fi'\r\n\r\nimport { setIconUrl, setTime } from '../helpers/weatherFunctions'\r\n\r\nconst MainWeather = ({ data }) => {\r\n  const { name, sunrise, sunset } = data.city\r\n  const { temp: tempDay } = data.list[0].main\r\n  const { temp: tempNight } = data.list[4].main\r\n  const { main, icon } = data.list[0].weather[0]\r\n\r\n  return (\r\n    <div className=\"main-weather\">\r\n      <span className=\"main-weather__sunrise-sunset\">\r\n        <FiSunrise /> {setTime(sunrise)} | {setTime(sunset)} <FiSunset />\r\n      </span>\r\n      <h2 className=\"main-weather__city\">{name}</h2>\r\n      <span className=\"main-weather__description\">{main}</span>\r\n      <h1 className=\"main-weather__temperature\">{Math.round(tempDay)}°</h1>\r\n      <span className=\"main-weather__day-night\">\r\n        {Math.round(tempDay)}°/{Math.round(tempNight)}°\r\n      </span>\r\n      <img\r\n        src={setIconUrl(icon)}\r\n        alt=\"Weather icon\"\r\n        className=\"main-weather__icon\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nMainWeather.propTypes = {\r\n  data: PropTypes.shape({\r\n    city: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      sunrise: PropTypes.number,\r\n      sunset: PropTypes.number,\r\n    }),\r\n    list: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        main: PropTypes.shape({\r\n          temp: PropTypes.number,\r\n        }),\r\n        weather: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            main: PropTypes.string,\r\n            icon: PropTypes.string,\r\n          })\r\n        ),\r\n      })\r\n    ),\r\n  }).isRequired,\r\n}\r\n\r\nexport default MainWeather\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst temperatureColor = 'rgba(106, 38, 207, 0.6)'\r\nconst windChillColor = 'rgba(55, 185, 241, 0.6)'\r\n\r\nconst WeatherChart = ({ futureData }) => {\r\n  const data = {\r\n    labels: futureData.map((item) => item.dt_txt),\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data: futureData.map((item) => item.main.temp),\r\n        borderColor: [temperatureColor],\r\n        backgroundColor: [temperatureColor],\r\n        pointBackgroundColor: temperatureColor,\r\n        pointBorderColor: temperatureColor,\r\n      },\r\n      {\r\n        label: 'Wind chill',\r\n        data: futureData.map((item) => item.main.feels_like),\r\n        borderColor: [windChillColor],\r\n        backgroundColor: [windChillColor],\r\n        pointBackgroundColor: windChillColor,\r\n        pointBorderColor: windChillColor,\r\n      },\r\n    ],\r\n  }\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Temperature (°C)',\r\n            fontSize: 24,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Date and hour',\r\n            fontSize: 24,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  )\r\n}\r\n\r\nWeatherChart.propTypes = {\r\n  futureData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dt_txt: PropTypes.string,\r\n      main: PropTypes.shape({\r\n        temp: PropTypes.number,\r\n        feels_like: PropTypes.number,\r\n      }),\r\n    })\r\n  ).isRequired,\r\n}\r\n\r\nexport default WeatherChart\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { setIconUrl, setWeekDayNameShort } from '../helpers/weatherFunctions'\r\n\r\nconst BarWeather = ({ futureData }) => {\r\n  return (\r\n    <ul className=\"bar-container\">\r\n      {futureData\r\n        // filter 4 days ahead from tomorrow\r\n        .filter((item, i) => !(i % 8) && i !== 0 && item)\r\n        .map((item) => {\r\n          const { dt } = item\r\n          const { icon } = item.weather[0]\r\n          const { temp } = item.main\r\n          return (\r\n            <li key={dt} className=\"bar-container__item\">\r\n              <span className=\"bar-container__week-day\">\r\n                {setWeekDayNameShort(dt)}\r\n              </span>\r\n              <img\r\n                src={setIconUrl(icon)}\r\n                alt=\"Weather icon\"\r\n                className=\"bar-container__icon\"\r\n              />\r\n              <span className=\"bar-container__temp\">{Math.round(temp)}°C</span>\r\n            </li>\r\n          )\r\n        })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nBarWeather.propTypes = {\r\n  futureData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dt: PropTypes.number.isRequired,\r\n      weather: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          icon: PropTypes.string.isRequired,\r\n        })\r\n      ),\r\n      main: PropTypes.shape({\r\n        temp: PropTypes.number.isRequired,\r\n      }),\r\n    })\r\n  ).isRequired,\r\n}\r\n\r\nexport default BarWeather\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GiWindsock } from 'react-icons/gi'\r\nimport { BiWater } from 'react-icons/bi'\r\nimport { WiBarometer } from 'react-icons/wi'\r\n\r\nimport { toTextualDescription } from '../helpers/weatherFunctions'\r\n\r\nconst SpecificData = ({ futureData, loading }) => {\r\n  if (loading) return 'Loading...'\r\n\r\n  const { pressure, humidity } = futureData[0].main\r\n  const { speed, deg } = futureData[0].wind\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tile\">\r\n        <GiWindsock className=\"tile__icon\" />\r\n        <div className=\"tile__specific\">\r\n          <span className=\"tile__specific--description\">\r\n            Speed: <b>{speed} m/s</b>\r\n            <br />\r\n            Direction: <b>{toTextualDescription(deg)}</b>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"tile\">\r\n        <BiWater className=\"tile__icon\" />\r\n        <div className=\"tile__specific\">\r\n          <span className=\"tile__specific--description\">\r\n            Humidity: <b>{humidity}%</b>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"tile\">\r\n        <WiBarometer className=\"tile__icon\" />\r\n        <div className=\"tile__specific\">\r\n          <span className=\"tile__specific--description\">\r\n            Pressure: <b>{pressure}hPa</b>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nSpecificData.propTypes = {\r\n  futureData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      main: PropTypes.shape({\r\n        pressure: PropTypes.number,\r\n        humidity: PropTypes.number,\r\n      }),\r\n      wind: PropTypes.shape({\r\n        speed: PropTypes.number,\r\n        deg: PropTypes.number,\r\n      }),\r\n    })\r\n  ).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default SpecificData\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n  return <p className=\"error\">City not found</p>\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport '../sass/components/_loader.scss'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useState } from 'react'\r\n\r\nconst useDebounce = () => {\r\n  const [typingTimeout, setTypingTimeout] = useState('')\r\n\r\n  const debounce = (func, delay = 1000) => {\r\n    clearTimeout(typingTimeout)\r\n\r\n    const timeout = setTimeout(() => func(), delay)\r\n\r\n    setTypingTimeout(timeout)\r\n  }\r\n  return debounce\r\n}\r\n\r\nexport default useDebounce\r\n","export const FETCH_WEATHER_REQUEST = 'FETCH_WEATHER_REQUEST'\r\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS'\r\nexport const FETCH_WEATHER_FAILURE = 'FETCH_WEATHER_FAILURE'\r\nexport const SET_ERROR = 'SET_ERROR'\r\n","import React, { useState, useEffect } from 'react'\r\nimport './sass/main.scss'\r\n\r\nimport {\r\n  Input,\r\n  MainWeather,\r\n  WeatherChart,\r\n  BarWeather,\r\n  SpecificData,\r\n  Error,\r\n  Loader,\r\n} from './components'\r\nimport useDebounce from './hooks/useDebounce'\r\n\r\nimport { fetchData, setError } from './actions/WeatherActions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction App() {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const debounce = useDebounce()\r\n  const dispatch = useDispatch()\r\n  const { data, futureData, error, loading } = useSelector((state) => state)\r\n\r\n  const inputHandler = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!inputValue && inputValue !== '') dispatch(() => setError(false))\r\n  }, [inputValue, error, dispatch])\r\n\r\n  useEffect(() => {\r\n    if (inputValue) debounce(() => dispatch(fetchData(inputValue)))\r\n  }, [inputValue, dispatch])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Input inputValue={inputValue} inputHandler={inputHandler} />\r\n      {error && <Error />}\r\n      {loading && <Loader />}\r\n      {data && (\r\n        <>\r\n          <MainWeather data={data} />\r\n          <WeatherChart futureData={futureData} />\r\n          <BarWeather futureData={futureData} />\r\n          <SpecificData futureData={futureData} loading={loading} />\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import axios from 'axios'\r\nimport {\r\n  FETCH_WEATHER_REQUEST,\r\n  FETCH_WEATHER_SUCCESS,\r\n  FETCH_WEATHER_FAILURE,\r\n  SET_ERROR,\r\n} from '../actiontypes/index'\r\nimport { BASE_URL } from '../constants'\r\n\r\nexport const fetchData = (inputValue) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: FETCH_WEATHER_REQUEST,\r\n    })\r\n\r\n    try {\r\n      const url = `${BASE_URL}/data/2.5/forecast?q=${inputValue}&units=metric&appid=${process.env.REACT_APP_API_WEATHER_KEY}`\r\n\r\n      const response = await axios.get(url)\r\n\r\n      dispatch({\r\n        type: FETCH_WEATHER_SUCCESS,\r\n        payload: response.data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_WEATHER_FAILURE,\r\n        error,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const setError = (error) => {\r\n  return { type: SET_ERROR, payload: error }\r\n}\r\n","import {\r\n  FETCH_WEATHER_REQUEST,\r\n  FETCH_WEATHER_SUCCESS,\r\n  FETCH_WEATHER_FAILURE,\r\n  SET_ERROR,\r\n} from '../actiontypes/index'\r\n\r\nconst INITIAL_STATE = {\r\n  data: null,\r\n  futureData: [],\r\n  error: null,\r\n  loading: false,\r\n}\r\n\r\nconst weatherReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_WEATHER_REQUEST:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n      }\r\n    case FETCH_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        data: action.payload,\r\n        futureData: action.payload.list,\r\n        loading: false,\r\n      }\r\n    case FETCH_WEATHER_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n    case SET_ERROR:\r\n      return { ...state, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default weatherReducer\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.jsx'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport weatherReducer from './reducers/weather'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst store = createStore(\r\n  weatherReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}